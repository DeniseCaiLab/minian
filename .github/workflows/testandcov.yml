name: pytest

# Run this workflow every time for pull requests and pushes to master and dev branch
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  test-and-coverage:
    name: Test and Cov py ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 5
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.8"]
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: minian
          environment-file: environment.yml
      - name: Install test dependencies
        run: |
          conda install -c conda-forge black==20.8b1 pytest pytest-cov
      - name: Lint with black
        run: |
          black --check minian
      - name: Run tests and collect coverage
        run: |
          pytest -v --color=yes --cov=minian --pyargs minian
          cp -r img artifact/img
      - name: Run doctest
        run: |
          pip install -r requirements/requirements-doc.txt
          sphinx-build -M doctest docs/source docs/build
      - name: Generate xml coverage report
        if: ${{ runner.os == 'Linux'}}
        run: |
          coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        if: ${{ runner.os == 'Linux'}}
        with:
          fail_ci_if_error: true
      - name: Set up conditional SHA value
        uses: haya14busa/action-cond@v1
        id: commit_sha
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: ${{ github.event.pull_request.head.sha }}
          if_false: ${{ github.sha }}
      - name: Upload notebook artifacts
        uses: actions/upload-artifact@v2
        if: ${{ runner.os == 'Linux'}}
        with:
          name: notebooks-${{ steps.commit_sha.outputs.value }}
          path: artifact
      - name: Trigger RTDs build
        uses: dfm/rtds-action@v1
        if: ${{ runner.os == 'Linux'}}
        with:
          webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
          webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
          commit_ref: ${{ github.ref }}
