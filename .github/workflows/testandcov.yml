name: pytest

# Run this workflow every time for pull requests and pushes to master and dev branch
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  test-and-coverage:
    # Name the Job
    name: Run tests and upload coverage
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.8]

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cleanup pre-installed tools
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - name: Update ubuntu-latest and install ffmpeg
      run: |
        sudo apt-get update
        sudo apt-get install ffmpeg
    - name: Install dependencies
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        $CONDA/bin/conda env update --file environment.yml --name base
        $CONDA/bin/conda install -c conda-forge black==20.8b1 pytest pytest-cov
        $CONDA/bin/pip install nbval
    - name: Lint with black
      run: |
        # stop the build if there are Python syntax errors or undefined names
        $CONDA/bin/black --check minian
    - name: Run pipeline and collect coverage
      run: |
        $CONDA/bin/pytest -v --color=yes --cov=minian --nbval-lax pipeline.ipynb
    - name: Run tests and collect coverage
      run: |
        $CONDA/bin/pytest -v --color=yes --cov=minian --cov-append --pyargs minian
    - name: Run doctest
      run: |
        $CONDA/bin/pip install -r requirements/requirements-doc.txt
        $CONDA/bin/sphinx-build -M doctest docs/source docs/build
    - name: Generate xml coverage report
      run: |
        $CONDA/bin/coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
